{"posts":[{"title":"Hello World 2025","text":"2024 是個值得紀錄的一年2023 年末，我離開了歐洲第一大的信用卡支付解決方案公司，加入了藍色巨人的行列。 隨著 2024 年工作量的增加，自我學習的難度也呈指數級提升，甚至連之前的筆記網站也已停更一年多。這讓我不禁思考：當軟體工程師停止自我學習的同時，是否也該重新檢視自己的生活與時間分配，是不是真的有達到 Work Life Balance？ 注意力是稀缺的資源 相較於時間分配，注意力是更稀缺的資源 我想這是我 2024 年最認同的話了，每天回到家後，想要投入新技術的學習，我總得先花大約 20 分鐘看 YouTube（或漫無目的逛蝦皮）才能真正進入狀態；有時甚至會直接選擇休息。這讓我回憶起念碩士、寫論文的日子，當時我竟能整天專注地閱讀論文、融會貫通，甚至舉一反三。 一來是現在可以分心的事情實在太多了，特別又在家班後的環境，實在很難不想放空。 二來是 注意力就像肌肉一樣，是要訓練的，念碩士時教授就有講，畢業後記得要持續念書，不然到最後連話都不會說了，或許 2025 年我該嘗試固定閱讀，看看這是否能真正提升我的注意力。 不過我也覺得這與個人的學習方法和習慣有關。我個人較喜歡 Top-down 的學習方式，先了解全局概況或各章節之間的關聯，再開始動手，就像撰寫 Side Project 時總想先規劃出完美的底層架構；但也可能因此，面對短期內用不到的知識時，我的注意力反而難以集中。 總結今年年初我終於重啟了第三版的 Knowledge Management，也花了一點時間研究 ppoffice 的 icarus Hexo Template，希望在 2025 年總結時能統計一下自己達成了哪些成就，並多分享與紀錄自己的所見所聞（不僅限於技術領域），同時也堅持自己的學習初衷： 我們不需要很厲害才能開始，但一定要開始後才能很厲害","link":"/2025/02/24/Hello-World-2025/"},{"title":"H2 資料庫測試出現 JdbcSQLSyntaxErrorException","text":"情境這幾天在測試 H2 資料庫用於單元測試，寫了一個 LoginVaildation (可參考我的 Github 專案)。 其中創建了 schema.sql &amp; data.sql 用於表的創建與資料的建置。 schema.sql 12345CREATE TABLE USER ( EMAIL VARCHAR(30) PRIMARY KEY, PXSSWORD VARCHAR(12), USERNAME NVARCHAR(30)); data.sql 1INSERT INTO USER (EMAIL, PXSSWORD, USERNAME) VALUES ('willy4543@gmail.com', 'Demo1234', 'William'); 執行後報出 JdbcSQLSyntaxErrorException 1Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement &quot;CREATE TABLE [*]USER ( EMAIL VARCHAR(30) PRIMARY KEY, PASSWORD VARCHAR(12), USER_NAME NVARCHAR(30) )&quot;; expected &quot;identifier&quot;; 原因USER 在 H2 內雖然不是 Table 的保留字，但 USER 是一個保留的標誌符 (identifier)，所以 H2 資料庫會把它當作當前登錄的用戶名稱。這就會導致指令出錯，拋出錯誤訊息告知在指令中出現了無效的標誌符。 解法把 TABLE 的名稱從 USER 更改為 PROJECT_USER 即可。 有時候這種來自小小設定的問題，似乎也只在遇到的時候記得，簡單紀錄一下。","link":"/2025/02/24/JdbcSQLSyntaxErrorException/"},{"title":"從霧裡來","text":"Cue Dependence 是一種記憶理論，由認知心理學家 Endel Tulving 提出，認為記憶形成時的線索，與未來檢索記憶時有密切的關係。 這些 cues 可能是場景，情緒，氣味，聲音，或是文字提示，幫助我們重新喚起記憶。 2025/2/19，我金門土生土長的漁夫阿公在家裡壽終正寢；不像我的伯公，在生命最後的清晨仍在海上灑網，直至天明時被海巡撈起，浪漫且悲壯。那天起家裡便對阿公嚴加看管，好比把膠筏上馬達的鑰匙藏起來，只怕這片的海，最終都要收回他們。 我對阿公的印象就是一個典型舊時代男性，大男人，功利主義，對金錢十分執著；他曾用木筷指著玻璃空碗對兒時的我說，你知道什麼是飯桶嗎，就是只會吃飯的人，想想真是細思極恐。所以在入殮的那時，我們把各種幣別的鈔票撲滿他的身體，多到應該會通膨的那種，不知道那頭有沒有金管會能處理這件事。 接著父親在他耳邊說出藏匿馬達鑰匙的位置，就和當年外公火化前一樣，外婆把一管黑嘉麗軟糖放進他的口袋，告訴他不要再到廚房偷冰糖吃了。 真是好笑，笑得我滿眼都是淚，笑得我看不清楚紙鈔上的面額。 公祭當天，可能都一直站著的原因，黑色的運動褲在我的腰上印出像海灘上的水紋，這種痛癢感讓我想起小時候清明節回去的夜晚，我抓著紅透的皮膚起床找阿嬤，但她與阿公都消失在老家裡，只好搖醒哥哥一起爬上三樓，神壇上紅通的蠟燭與高掛的吳姓燈籠，本能地讓我們逃回樓下。後來我們抽出大門的木鞘，四月的霧就這樣湧進客廳，而我們走到大街上，直到霧氣吞沒我們的哭聲。 後來阿公帶著阿嬤從海邊回來了，肩上的扁擔掛著裝滿漁獲的橘色塑膠箱。阿嬤說金門風大，早上起霧，中午就會出太陽的。 今天海平面也都是霧氣，中午太陽也好大好熱，但我知道他們再也不會從霧裡出現了。","link":"/2025/03/01/fromTheFog/"},{"title":"Orcale BD ORA-01704 string literal too long","text":"情境最近在做一些網路交易系統的開發，過程中需要不斷往 DB 塞入大量的法規 html 字串，取出後在前端再用 v-html 渲染。 範例 SQL12345678INSERT INTO DBP.CONTRACT_I18N(CONTRACT_ID, LOCALE, TITLE, CONTENT)VALUES ( 1, 'zh-TW', '數位網站&lt;br&gt;登入設施約定條款', TO_CLOB('&lt;div&gt;超長的法規條款內容&lt;/div&gt;'),); 在 INSERT 的時候 IDE ORA-01704: string literal too long 的訊息；忽然想到以前做專案的時候會在各段落間穿插 ') || TO_CLOB(' 來分段。 原因是 Oracle SQL 單一字串（VARCHAR2 literal） 最大只能 4000 bytes。而在 Oracle SQL Parser（語法解析階段）啟動時，TO_CLOB('...') 內的內容，在進入 TO_CLOB 函數之前，首先被當作 SQL String Literal 處理。所以超過 4000 bytes，Oracle 在 Parser 階段會直接報錯。 如果字串合法（≤ 4000 bytes），Oracle 才會把這個 String Literal 當成參數傳給 TO_CLOB()。 所以就改為: 12345678INSERT INTO DBP.CONTRACT_I18N(CONTRACT_ID, LOCALE, TITLE, CONTENT)VALUES ( 1, 'zh-TW', '數位網站&lt;br&gt;登入設施約定條款', TO_CLOB('&lt;div&gt;超長的法規條款內容1 ') || TO_CLOB(' 超長的法規條款內容2 ') || TO_CLOB(' 超長的法規條款內容3&lt;/div&gt;'),); 最後乾脆讓 AI 寫一個 Main 方法，之後包在測試工具類裡面。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849import java.io.*;public class ToClobFormatter { public static void main(String[] args) { String inputFilePath = &quot;D:/tmp/target.txt&quot;; String outputFilePath = &quot;D:/tmp/result.txt&quot;; int chunkSize = 700; // 以「字數」切段 try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(inputFilePath), &quot;UTF-8&quot;)); BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(outputFilePath), &quot;UTF-8&quot;))) { writer.write(&quot;TO_CLOB('&quot;); // 開頭先寫入 TO_CLOB int currentLength = 0; StringBuilder chunkBuffer = new StringBuilder(); String line; while ((line = reader.readLine()) != null) { // 保留原格式與換行，單引號轉義 String processedLine = line.replace(&quot;'&quot;, &quot;''&quot;) + &quot;\\n&quot;; int linePos = 0; while (linePos &lt; processedLine.length()) { int remaining = chunkSize - currentLength; int charsToTake = Math.min(remaining, processedLine.length() - linePos); chunkBuffer.append(processedLine, linePos, linePos + charsToTake); currentLength += charsToTake; linePos += charsToTake; if (currentLength &gt;= chunkSize) { writer.write(chunkBuffer.toString()); writer.write(&quot;')||TO_CLOB('&quot;); chunkBuffer.setLength(0); // 清掉buffer currentLength = 0; } } } // 最後剩下的寫出去 if (chunkBuffer.length() &gt; 0) { writer.write(chunkBuffer.toString()); } writer.write(&quot;')&quot;); // 收尾 } catch (IOException e) { e.printStackTrace(); } }}","link":"/2025/03/24/Ora01704/"}],"tags":[{"name":"chit-chat","slug":"chit-chat","link":"/tags/chit-chat/"},{"name":"Exception","slug":"Exception","link":"/tags/Exception/"},{"name":"develop","slug":"develop","link":"/tags/develop/"},{"name":"DB","slug":"DB","link":"/tags/DB/"},{"name":"Life","slug":"Life","link":"/tags/Life/"}],"categories":[{"name":"Life","slug":"Life","link":"/categories/Life/"},{"name":"Troll","slug":"Troll","link":"/categories/Troll/"}],"pages":[{"title":"關於我","text":"我是 William Wu, 在美商國際商業機器擔任 Application Consultant，主要從事 Java Backend、DevOps 在台灣銀行與金融領域的開發。 Williamrightone/km-book 是我於 2022 年七月起用於紀錄學習、分享技術與 Side Project 的專案，期間經歷 GitBook, Hugo 到近期嘗試使用 Hexo，偶而會分享一些生活的心得。 除了自我學習以外，也希望能幫助到遭遇相同問題的人 我們不需要很厲害才能開始，但一定要開始後才能很厲害 不定期更新，若內容有需修正的地方也請不吝通知我~ Willy4543@gmail.com 剛出社會的時候大學同學遺忘糾露營、早期又揪不到人組團參加 It Iron-man，被戲稱 孤單威廉，另外我也是一位 Lindy Hop NewComer, 或許有一天我們會在舞池相遇。","link":"/about/index.html"},{"title":"fromTheFog","text":"","link":"/fromTheFog/index.html"}]}